pipeline
{
    agent any
    
    
    
    tools{
    maven 'Maven'
    }
    
   stages{
    stage('Build')
        {
            steps{
              sh 'mvn clean install'
                 }
         }
         stage('SonarQube analysis') {
       steps{
        withSonarQubeEnv('SonarQube') {
            sh 'mvn sonar:sonar -Pprofile1'
           }
       }
   }
      stage("Quality Gate") {
            steps {
              timeout(time: 10, unit: 'MINUTES') {
                waitForQualityGate abortPipeline: true
              }
            }
          }
       stage('Nexus')
    {
     steps{
          withCredentials([usernamePassword(credentialsId: 'nexus_Credentials', passwordVariable: 'pass', usernameVariable: 'userId')]) {
            sh   'curl -F file=@target/dynamic_new-${BUILD_NUMBER}.war -u $userId:$pass http://ec2-18-224-155-110.us-east-2.compute.amazonaws.com:8081/nexus/content/repositories/devopstraining/Codekillers/dynamic_new-${BUILD_NUMBER}.war'
          }   
        }
    }
    stage('Deploy'){
      steps{
     // deploy adapters: [tomcat8(credentialsId: 'tocat', path: '', url: 'https://3.17.25.184:8090/')], contextPath: 'Deployy', war: '**/*.war'
      withCredentials([usernamePassword(credentialsId: 'tomcatpuppet', passwordVariable: 'pass', usernameVariable: 'userId')]){
        sh 'curl http://ec2-3-17-25-184.us-east-2.compute.amazonaws.com:8090/manager/text/undeploy?path=/Deployy -u $userId:$pass'
        sh 'curl -v -u ${username}:${password} -T target/dynamic_new{BUILD_NUMBER}.war http://ec2-3-17-25-184.us-east-2.compute.amazonaws.com:8090/manager/text/deploy?path=/Deployy'
      }
    }
   }
    stage("Slack")
    {
        steps{
slackSend baseUrl: 'https://hooks.slack.com/services/', channel: '#puppetdemo', message: 'Welcome to slack', notifyCommitters: true, teamDomain: 'https://codekillerss.slack.com/', tokenCredentialId: 'slack-demo'    

}
}
      }
}
